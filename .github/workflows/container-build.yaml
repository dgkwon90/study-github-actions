name: Create and publish a Server Service Docker image
run-name: Server Service GitHub Actions ðŸš€

on:
  pull_request:
    branches:
      - 'main'
env:
  CONTAINER_REGISTRY: ghcr.io

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'services' output variable
      packages: ${{ steps.filter.outputs.changes }}
    steps:
    # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            server: server/**
            client: client/**

  # JOB to build and push each of modified packages
  build-and-push-image:
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['server', 'client'] if both package folders contains changes
        package: ${{ fromJSON(needs.changes.outputs.packages) }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}/${{ matrix.package }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to the Container Registry
        #if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Container image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.package }}/build/Dockerfile
          push: true
          #push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: |
          #   SERVICE_NAME=${{ env.SERVICE_NAME }}
          #   SERVICE_PORT=${{ env.SERVICE_PORT }}
          #   SERVER_IP=${{ env.SERVER_IP }}
          #   GIT_SHORT_COMMIT_ID=${{ env.GIT_SHORT_COMMIT_ID }}
          #   BUILD_TIME=${{ env.BUILD_TIME }}
