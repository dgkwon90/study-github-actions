# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Clinet Service Docker image
run-name: ${{ github.actor }} is pull request out GitHub Actions ðŸš€

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'client/**'

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # - name: Check out repository code
      # - uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0

      # - name: Get changed files in the service folder
      # - uses: tj-actions/changed-files@v35
      #   id: changed-files-specific
      #   with:
      #     paths: client/**

      - name: Added environment variable for service.
        id: service_info
        run: |
          echo "SERVICE_NAME=client" >> $GITHUB_ENV
          echo "SERVICE_PORT=9999" >> $GITHUB_ENV

      - name: Added environment variable for version.
        id: version
        run: |
          echo "::set-output name=GIT_SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
          echo "::set-output name=BUILD_TIME::$(date +'%Y-%m-%d_%H:%M')"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.SERVICE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ env.SERVICE_NAME }}/build/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVICE_NAME=${{ env.SERVICE_NAME }}
            SERVICE_PORT=${{ env.SERVICE_PORT }}
            GIT_SHORT_COMMIT_ID=${{ steps.version.outputs.GIT_SHORT_COMMIT_ID }}
            BUILD_TIME=${{ steps.version.outputs.BUILD_TIME }}
