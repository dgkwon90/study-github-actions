# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  pull_request:
    branches:
      - 'main'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: service with environment variables
        id: add_service_env
        run: |
          echo "SERVICE_NAME=server" >> $GITHUB_ENV
          echo "SERVICE_PORT=9999" >> $GITHUB_ENV
          echo "GIT_SHORT_COMMIT_ID::$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME::$(date +'%Y-%m-%d_%H:%M')" >> $GITHUB_ENV

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVICE_NAME=${{ env.SERVICE_NAME }}
            SERVICE_PORT=${{ env.SERVICE_PORT }}
            GIT_SHORT_COMMIT_ID=${{ env.GIT_SHORT_COMMIT_ID }}
            BUILD_TIME=${{ env.BUILD_TIME }}
